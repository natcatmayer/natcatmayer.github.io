---
title: "Nonlinear Regression Models and Applications in Agricultural Research"
author: "Natalie Mayer"
image: corn.jpg
description: "A non-linear least squares regression was developed using the sorghum crops with high input level, and then run over all 24 combinations of block, input level and crop type."
format: 
  html:
    embed-resources: true 
    code-fold: true
    toc: true
    number-sections: true
editor: visual
execute:
  echo: true
  warning: false
  message: false 
---

# Overview

The data includes information about Sorghum and Maize growth in Greece. The five variables in the dataset are Day of the Year (DOY), Block in the experimental design (1, 2, 3, or 4), Input level 1 (Low) or 2 (High), Crop (F-Fiber Sorghum, M-Maize, S-Sweet Sorghum), and Biomass yield in Mg/ha. In this analysis, a beta function was defined by the formula given in Table 1, Equation 2.5 of the cited paper. A non-linear least squares regression was developed using the sorghum crops with high input level, and then run over all 24 combinations of block, input level and crop type.

Pseudocode:

-   Load libraries and data

-   Define beta function from table 1, equation 2.5 in cited paper

-   Create exploratory ggplot and formulate guesses of y_max (the maximum crop yield), t_m (the day at which the growth rate is at a maximum), and t_e (the day at which yield reaches its maximum)

-   Create subset of data using only sorghum crops and high input level

-   Run NLS on subset created in previous step

-   Create a table using Kable to show resulting coefficients and their significance

-   Create ggplot showing the NLS curve over all of the data

-   Run the NLS on all 24 combinations of crop, input level and block using purr maps

-   Filter to select the three models with the lowest RMSE, and create a table using Kable to show resulting coefficients and their significance

-   Re-create Figure 7 from cited paper (filter to only include data from block 1 & separate into high and low input)

# Data

Archontoulis, S.V. and Miguez, F.E. (2015), Nonlinear Regression Models and Applications in Agricultural Research. Agronomy Journal, 107: 786-798. https://doi.org/10.2134/agronj2012.0506

# Load libraries and data

```{r}
library(tidyverse)
library(here)
library(nlraa)
library(kableExtra)
library(Metrics)
library(patchwork)

sm_df <- sm %>%
  janitor::clean_names() %>%
  group_by(crop)
```

# Beta Function (Table 1, Equation 2.5)

Y is the response variable, biomass. Y_max is the maximum possible biomass. T represents the number day of the year. T_m is the inflection point at which the growth rate is maximized, t_e represents the time where the biomass is equal to its maximum possible value.

```{r}
beta_fxn <- function(doy, t_e, t_m, y_max){
  out = y_max * (1 + (t_e - doy)/ (t_e - t_m)) * (doy/t_e)^(t_e/(t_e - t_m))
  return(out)
}
```

```{r}
#| eval: FALSE 

y_max = 48
t_e = 280
t_m = 250

sm_sim <- sm_df %>%
  mutate(predict = beta_fxn(doy, t_e, t_m, y_max))

sm_sim$input <- factor(sm_sim$input, levels = c("1", "2"), labels = c("Low", "High"))

ggplot(data = sm_sim, 
       aes(x = doy, y = yield, shape = crop)) + 
  geom_point(alpha = 0.5) + 
  geom_line(aes(x = doy, y = predict), linewidth = 1, color = "red") + 
  facet_wrap(~input) +
  theme_bw() + 
  labs(y = "Biomass (Mg/ha)", x = "Day of the Year")
```

```{r}
# filter out low inputs 

sm_high <- sm_df %>%
  filter(input == 2) %>%
  filter(input != "M")

```

```{r}

crop_nls = nls(formula = yield ~ beta_fxn(doy, t_e, t_m, y_max), 
               data = sm_high, 
               start = list(t_e = 280, t_m = 250, y_max = 48), 
               trace = TRUE)
```

```{r}
crop_nls %>%
  broom::tidy() %>% 
  mutate(p.value = ifelse(p.value <= 0.05, "<0.05")) %>%
  kbl(digits = 2, align = NULL) %>%
  kable_classic() 
```

# Graph Model over Data

```{r}
#| label: fig-1
#| fig-cap: "Crop type is represented by color: Fiber Sorghum (red), Maize (green), and Sweet Sorghum (blue). The x-axis represnts time by days of the year, and the y-axis represents yield in biomass (Mg/ha). The fitted NLS curve is shown in black over the data points."

t_e = 283.84
t_m = 244.80
y_max = 35.13


sm_plot <- sm_high %>%
  mutate(predict = beta_fxn(doy, t_e, t_m, y_max))


ggplot(data = sm_plot, 
       aes(x = doy, y = yield, color = crop)) + 
  geom_point() + 
  geom_line(aes(x = doy, y = predict), linewidth = 1, color = "gray1") + 
  theme_minimal() + 
  labs(y = "Biomass (Mg/ha)", x = "Day of the Year")
```

# Run Model on all Combinations of Input, Block & Crop

```{r}
sm_df1 <- sm_df %>% group_by(crop)
```

```{r}
all_nls_fxn <- function(sm_df){
  nls(yield ~ beta_fxn(doy, t_e, t_m, y_max), 
  data = sm_df, 
  start = list(t_e = 283.84, t_m = 244.80, y_max = 30))
}
```

```{r}
yield_all <- sm_df %>%
  group_by(block, input, crop) %>%
  nest() %>%
  mutate(nls_model = map(data,~all_nls_fxn(.x))) %>%
  mutate(predictions = map2(nls_model, data, ~predict(.x, newdata = .y))) %>%
  mutate(RMSE = map2_dbl(predictions, data, ~rmse(.x, .y$yield))) %>%
  mutate(smooth = map(nls_model, ~predict(.x, newdata = list(doy = seq(147, 306)))))
```

```{r}
rmse_table <- yield_all %>%
  group_by(crop) %>%
  summarize(rmse = min(RMSE))


low_rmse <- yield_all %>%
  filter(RMSE %in% rmse_table$rmse) 

low_rmse_M <- broom::tidy(low_rmse$nls_model[[1]]) %>%
  mutate(crop = "M")

low_rmse_S <- broom::tidy(low_rmse$nls_model[[2]]) %>%
  mutate(crop = "S") 

low_rmse_F <- broom::tidy(low_rmse$nls_model[[3]]) %>%
  mutate(crop = "F") 

low_rmse_combined <- bind_rows(low_rmse_M, low_rmse_S, low_rmse_F) 

low_rmse_combined %>%
  kbl() %>%
  kable_classic()


```

```{r}
# unnest predictions from data 
un_df <- yield_all %>%
  filter(block == 1) %>%
  tidyr::unnest(smooth) %>%
  mutate(doy = seq(147, 306)) %>%
  filter(!(doy > 263 & crop == "M"))

```

```{r}
# create df to add corn data 

hi_filter <- sm_df %>%
  filter(block == 1 & input == 2)

low_filter <- sm_df %>%
  filter(block == 1 & input == 1)

```

# Recreate Figure 7

```{r}
#| label: fig-2
#| fig-cap: "Observed data and fit for the final model for three crops: maize (M), fiber sorghum (F), and sweet sorghum (S)"

hi_plot <- un_df %>% 
  filter(block == 1 & input == 2) %>%
  ggplot() + 
  geom_point(data = hi_filter, aes(x = doy, y = yield, shape = crop), show.legend = FALSE) + 
  geom_line(aes(x = doy, y = smooth, linetype = crop), show.legend = FALSE) + 
  labs(title = "High", y = "Biomass (Mg/ha)", x = "Day of Year", color = "")

low_plot <- un_df %>% 
  filter(block == 1 & input == 1) %>%
  ggplot() + 
  geom_point(data = low_filter, aes(x = doy, y = yield, shape = crop)) + 
  geom_line(aes(x = doy, y = smooth, linetype = crop)) + 
  labs(title = "Low", y = "", x = "Day of Year", color = "")

patch <- hi_plot + low_plot 
patch

```
